/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Main;

import Data.DBConnection;
import Models.Transactions;
import java.sql.Date;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Administrator
 */
public class SellProduct extends javax.swing.JFrame {

    /**
     * Creates new form SellProduct
     */
    public SellProduct() {
        
        initComponents();
        setDefaultCloseOperation(AddProduct.DISPOSE_ON_CLOSE);
        this.setLocationRelativeTo(null);
        jL_prixUnit.setText("");
        jL_Total.setText("");
        jL_clientAdress1.setText("");
        jL_clientEmail.setText("");
        jL_clientPhone.setText("");
        getData();
        
    }
    
    private void getData(){
    
    if (DBConnection.Connect()) {
            //Prendre liste des clients
            if (DBConnection.ListClients()) {
                System.out.println("liste clients pret");
                DefaultComboBoxModel clientModel = new DefaultComboBoxModel();
                clientModel.addElement("Pas de selection");
                DBConnection.mesClients.forEach((_item) -> {
                    clientModel.addElement("CT00" + _item.getID() + " : " + _item.getf_name());
                });
                jCB_clientChooser1.setModel(clientModel);

            } else {
                System.out.println("Erreur liste clients");
                MainScreen.infoBox("Erreur de connection au DB", "Info");
            }

            //prendre liste des produits
            if (DBConnection.ListProduits()) {
                System.out.println("liste produits pret");
                DefaultComboBoxModel productModel = new DefaultComboBoxModel();
                productModel.addElement("Pas de selection");
                DBConnection.mesProduits.forEach((_item) -> {
                    productModel.addElement("PR00" + _item.getID() + " : " + _item.getP_name() + " - " + _item.getConstructor());
                });
                jCB_productChooser.setModel(productModel);

            } else {
                System.out.println("Erreur liste produits");
            }

            //Prendre liste des vendeurs
            if (DBConnection.ListUtilisateurs()) {
                System.out.println("liste vendeurs pret");

            } else {
                System.out.println("Erreur liste vendeurs");
            }

        } else {

        }
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SellContainer = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jCB_productChooser = new javax.swing.JComboBox<>();
        btn_annu = new javax.swing.JButton();
        btn_ValidateTransaction = new javax.swing.JButton();
        btn_addClient = new javax.swing.JButton();
        btn_raffraichir = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jCB_clientChooser1 = new javax.swing.JComboBox<>();
        jS_Quantite = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jL_Vendor = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jL_prixUnit = new javax.swing.JLabel();
        jL_Total = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jL_clientEmail = new javax.swing.JLabel();
        jL_clientAdress1 = new javax.swing.JLabel();
        jL_clientPhone = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        SellContainer.setBackground(new java.awt.Color(255, 255, 255));
        SellContainer.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(41, 98, 255));

        jLabel1.setBackground(new java.awt.Color(41, 98, 255));
        jLabel1.setFont(new java.awt.Font("Arial Black", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Vendre un produit");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 479, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(37, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );

        SellContainer.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 20, 550, 60));

        jPanel3.setBackground(new java.awt.Color(41, 98, 255));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );

        SellContainer.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 100, 10, 400));

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Produit :");
        SellContainer.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 150, 80, 30));

        jCB_productChooser.setBackground(new java.awt.Color(255, 255, 255));
        jCB_productChooser.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jCB_productChooser.setForeground(new java.awt.Color(0, 0, 0));
        jCB_productChooser.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jCB_productChooser.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(41, 98, 255), 1, true));
        jCB_productChooser.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCB_productChooserItemStateChanged(evt);
            }
        });
        jCB_productChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCB_productChooserActionPerformed(evt);
            }
        });
        SellContainer.add(jCB_productChooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 150, 270, 30));

        btn_annu.setBackground(new java.awt.Color(41, 98, 162));
        btn_annu.setFont(new java.awt.Font("Franklin Gothic Demi", 1, 14)); // NOI18N
        btn_annu.setForeground(new java.awt.Color(255, 255, 255));
        btn_annu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ic_cancel_white.png"))); // NOI18N
        btn_annu.setText("Annule");
        btn_annu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_annuActionPerformed(evt);
            }
        });
        SellContainer.add(btn_annu, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 470, 150, 40));

        btn_ValidateTransaction.setBackground(new java.awt.Color(41, 98, 162));
        btn_ValidateTransaction.setFont(new java.awt.Font("Franklin Gothic Demi", 1, 14)); // NOI18N
        btn_ValidateTransaction.setForeground(new java.awt.Color(255, 255, 255));
        btn_ValidateTransaction.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ic_exit_to_app_white.png"))); // NOI18N
        btn_ValidateTransaction.setText("Vallider");
        btn_ValidateTransaction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ValidateTransactionActionPerformed(evt);
            }
        });
        SellContainer.add(btn_ValidateTransaction, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 470, 160, 40));

        btn_addClient.setBackground(new java.awt.Color(41, 98, 162));
        btn_addClient.setFont(new java.awt.Font("Franklin Gothic Demi", 1, 14)); // NOI18N
        btn_addClient.setForeground(new java.awt.Color(255, 255, 255));
        btn_addClient.setText("Nouveau client");
        btn_addClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addClientActionPerformed(evt);
            }
        });
        SellContainer.add(btn_addClient, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 200, 150, 40));

        btn_raffraichir.setBackground(new java.awt.Color(41, 98, 162));
        btn_raffraichir.setFont(new java.awt.Font("Franklin Gothic Demi", 1, 14)); // NOI18N
        btn_raffraichir.setForeground(new java.awt.Color(0, 0, 0));
        btn_raffraichir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ic_refresh_white.png"))); // NOI18N
        btn_raffraichir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_raffraichirActionPerformed(evt);
            }
        });
        SellContainer.add(btn_raffraichir, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, 50, 40));

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Information sur le client");
        SellContainer.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 250, 30));

        jCB_clientChooser1.setBackground(new java.awt.Color(255, 255, 255));
        jCB_clientChooser1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jCB_clientChooser1.setForeground(new java.awt.Color(0, 0, 0));
        jCB_clientChooser1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jCB_clientChooser1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(41, 98, 255), 1, true));
        jCB_clientChooser1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCB_clientChooser1ItemStateChanged(evt);
            }
        });
        SellContainer.add(jCB_clientChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 220, 30));

        jS_Quantite.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jS_Quantite.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jS_QuantiteStateChanged(evt);
            }
        });
        SellContainer.add(jS_Quantite, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 260, 130, 30));

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Information sur le Produit");
        SellContainer.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 100, 310, 30));

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Prix unitaire:");
        SellContainer.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 210, 80, 30));

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Vendeur :");
        SellContainer.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 460, 80, 30));

        jL_Vendor.setBackground(new java.awt.Color(255, 255, 255));
        jL_Vendor.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        jL_Vendor.setForeground(new java.awt.Color(51, 51, 255));
        jL_Vendor.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jL_Vendor.setText("jLabel7");
        SellContainer.add(jL_Vendor, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 460, 180, 30));

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("Quantite :");
        SellContainer.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 260, 80, 30));

        jL_prixUnit.setBackground(new java.awt.Color(255, 255, 255));
        jL_prixUnit.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        jL_prixUnit.setForeground(new java.awt.Color(0, 0, 0));
        jL_prixUnit.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jL_prixUnit.setText("jLabel7");
        SellContainer.add(jL_prixUnit, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 210, 120, 30));

        jL_Total.setBackground(new java.awt.Color(255, 255, 255));
        jL_Total.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        jL_Total.setForeground(new java.awt.Color(255, 0, 0));
        jL_Total.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jL_Total.setText("jLabel7");
        jL_Total.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(41, 98, 255), new java.awt.Color(0, 0, 0)));
        SellContainer.add(jL_Total, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 310, 120, 30));

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Total : ");
        SellContainer.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 310, 80, 30));

        jL_clientEmail.setBackground(new java.awt.Color(255, 255, 255));
        jL_clientEmail.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jL_clientEmail.setForeground(new java.awt.Color(0, 0, 0));
        jL_clientEmail.setText("jLabel9");
        SellContainer.add(jL_clientEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 340, 190, 40));

        jL_clientAdress1.setBackground(new java.awt.Color(255, 255, 255));
        jL_clientAdress1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jL_clientAdress1.setForeground(new java.awt.Color(0, 0, 0));
        jL_clientAdress1.setText("jLabel9");
        SellContainer.add(jL_clientAdress1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, 190, 40));

        jL_clientPhone.setBackground(new java.awt.Color(255, 255, 255));
        jL_clientPhone.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jL_clientPhone.setForeground(new java.awt.Color(0, 0, 0));
        jL_clientPhone.setText("jLabel9");
        SellContainer.add(jL_clientPhone, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 300, 190, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(SellContainer, javax.swing.GroupLayout.DEFAULT_SIZE, 676, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(SellContainer, javax.swing.GroupLayout.DEFAULT_SIZE, 524, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_annuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_annuActionPerformed

        this.setVisible(false);
    }//GEN-LAST:event_btn_annuActionPerformed

    private void btn_ValidateTransactionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ValidateTransactionActionPerformed
        // TODO add your handling code here:
        if (jCB_productChooser.getSelectedIndex() != 0) {
            if (jCB_clientChooser1.getSelectedIndex() != 0) {
                if ((Integer.valueOf(String.valueOf(jS_Quantite.getValue())) != 0) && (DBConnection.mesProduits.get(jCB_clientChooser1.getSelectedIndex() - 1).getQuantite() >= Integer.valueOf(String.valueOf(jS_Quantite.getValue())))) {
                    if (DBConnection.Connect()) {
                        try {
                            Transactions t = new Transactions();
                            t.setCliendID(jCB_clientChooser1.getSelectedIndex());
                            t.setProductID(Integer.valueOf(DBConnection.mesProduits.get(jCB_productChooser.getSelectedIndex() - 1).getID()));
                            t.setTotal(Float.valueOf(jL_Total.getText()));
                            t.setUserId(1);
                            //String timeStamp = new SimpleDateFormat("yyyy-MM-dd").format(Calendar.getInstance().getTime());
                            //int year = Integer.valueOf(new SimpleDateFormat("yyyy").format(Calendar.getInstance().getTime()));
                            //int month = Integer.valueOf(new SimpleDateFormat("MM").format(Calendar.getInstance().getTime()));
                            //int day = Integer.valueOf(new SimpleDateFormat("dd").format(Calendar.getInstance().getTime()));
                            long l = Calendar.getInstance().getTime().getTime();
                            Date d = new Date(Calendar.getInstance().getTime().getTime());
                            t.setDate(d);
                            if (DBConnection.AjouterTransaction(t)) {
                                if(DBConnection.UpdateProductQuantity(Integer.valueOf(DBConnection.mesProduits.get(jCB_productChooser.getSelectedIndex() - 1).getID()), (DBConnection.mesProduits.get(jCB_productChooser.getSelectedIndex() - 1).getQuantite() - Integer.valueOf(String.valueOf(jS_Quantite.getValue()))))){
                                    System.out.println("Transaction enregistree");
                                    MainScreen.infoBox("Transaction enregistree", "Info");
                                    getData();
                                }else{
                                
                                }
                            } else {
                                System.out.println("Erreur d'insertion");
                                MainScreen.infoBox("Erreur d'insertion", "Erreur");
                            }
                        } catch (NumberFormatException e) {
                            System.out.println(e.getMessage());
                        }
                    } else {
                        System.out.println("Impossible de se connecter a la base de donnee");
                        MainScreen.infoBox("Impossible de se connecter a la base de donnee", "Erreur");
                    }
                } else {
                    System.out.println("La quantite selectionnee n'est pas correct");
                    MainScreen.infoBox("La quantite selectionnee n'est pas correct", "Erreur");
                }
            } else {
                System.out.println("Veuillez choisir un client");
                MainScreen.infoBox("Veuillez choisir un client", "Erreur");
            }
        } else {
            System.out.println("Veuillez choisir un produit");
            MainScreen.infoBox("Veuillez choisir un produit", "Erreur");
        }

    }//GEN-LAST:event_btn_ValidateTransactionActionPerformed

    private void btn_addClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addClientActionPerformed
        // TODO add your handling code here:
        AddClient ap = new AddClient();
        ap.setVisible(true);

    }//GEN-LAST:event_btn_addClientActionPerformed

    private void btn_raffraichirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_raffraichirActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_btn_raffraichirActionPerformed

   

    private void jCB_productChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCB_productChooserActionPerformed
        // TODO add your handling code here:
        //jCB_productChooser.getSelectedIndex();
    }//GEN-LAST:event_jCB_productChooserActionPerformed

    private void jCB_productChooserItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCB_productChooserItemStateChanged
        // TODO add your handling code here:
        //jCB_productChooser.getSelectedIndex();
        if (jCB_productChooser.getSelectedIndex() != 0) {
            try {
                jL_prixUnit.setText(String.valueOf(DBConnection.mesProduits.get(jCB_productChooser.getSelectedIndex() - 1).getPrice()));
                jL_Total.setText(String.valueOf(DBConnection.mesProduits.get(jCB_productChooser.getSelectedIndex() - 1).getPrice() * Integer.valueOf(String.valueOf(jS_Quantite.getValue()))));
            } catch (NumberFormatException e) {
                System.out.println(e.getMessage());
            }
        } else {
            jL_prixUnit.setText("");
            jL_Total.setText("");
        }

        //String.valueOf(jS_Quantite.getValue());
    }//GEN-LAST:event_jCB_productChooserItemStateChanged

    private void jS_QuantiteStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jS_QuantiteStateChanged
        try {
            //jL_prixUnit.setText(String.valueOf(DBConnection.mesProduits.get(jCB_productChooser.getSelectedIndex()).getPrice()));
            jL_Total.setText(String.valueOf(DBConnection.mesProduits.get(jCB_productChooser.getSelectedIndex() - 1).getPrice() * Integer.valueOf(String.valueOf(jS_Quantite.getValue()))));
        } catch (NumberFormatException e) {

        }
    }//GEN-LAST:event_jS_QuantiteStateChanged

    private void jCB_clientChooser1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCB_clientChooser1ItemStateChanged
        // TODO add your handling code here:
        if (jCB_clientChooser1.getSelectedIndex() != 0) {
            try {
                jL_clientAdress1.setText(DBConnection.mesClients.get(jCB_clientChooser1.getSelectedIndex()).getAdress());
                jL_clientEmail.setText(DBConnection.mesClients.get(jCB_clientChooser1.getSelectedIndex()).getEmail());
                jL_clientPhone.setText(DBConnection.mesClients.get(jCB_clientChooser1.getSelectedIndex()).getTelephone());
            } catch (Exception e) {
                System.out.println(e.getMessage());
            }
        } else {
            jL_clientAdress1.setText("");
            jL_clientEmail.setText("");
            jL_clientPhone.setText("");
        }
    }//GEN-LAST:event_jCB_clientChooser1ItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SellProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SellProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SellProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SellProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SellProduct().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel SellContainer;
    private javax.swing.JButton btn_ValidateTransaction;
    private javax.swing.JButton btn_addClient;
    private javax.swing.JButton btn_annu;
    private javax.swing.JButton btn_raffraichir;
    private javax.swing.JComboBox<String> jCB_clientChooser1;
    private javax.swing.JComboBox<String> jCB_productChooser;
    private javax.swing.JLabel jL_Total;
    private javax.swing.JLabel jL_Vendor;
    private javax.swing.JLabel jL_clientAdress1;
    private javax.swing.JLabel jL_clientEmail;
    private javax.swing.JLabel jL_clientPhone;
    private javax.swing.JLabel jL_prixUnit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSpinner jS_Quantite;
    // End of variables declaration//GEN-END:variables
}
